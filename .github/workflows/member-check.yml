name: Detect New Org Members

on:
  schedule:
    - cron: '6 * * * *'  
  workflow_dispatch:      # Allow manual trigger for testing

jobs:
  detect-new-members:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current org members
        run: |
          curl -s -H "Authorization: token ${{ secrets.ORG_PAT }}" \
            https://api.github.com/orgs/DevFlow-Project/members \
            | jq -r '.[].login' | sort > current-members.txt

      - name: Load previous list
        run: |
          if [ -f previous-members.txt ]; then
            cat previous-members.txt | sort > previous.txt
          else
            touch previous.txt
          fi

      - name: Find new members
        id: compare
        run: |
          comm -13 previous.txt current-members.txt > new-members.txt
          echo "new_members=$(cat new-members.txt | paste -sd ',' -)" >> $GITHUB_OUTPUT

      - name: Create issues for new members
        if: steps.compare.outputs.new_members != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const members = "${{ steps.compare.outputs.new_members }}".split(',');
            for (const username of members) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: ` New Member Joined: @${username}`,
                body: `@${username} has accepted the org invite and joined. Welcome aboard!`
              });
            }

      - name: Save current list
        run: |
          mv current-members.txt previous-members.txt

      - name: Commit updated list
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add previous-members.txt
          git commit -m "Update member list" || echo "No changes"
          git push || echo "No push needed"
